aside {
  background: #f0f0f0;
  padding: 1em;
  padding-bottom: 0.5em;
  margin-bottom: 1em;
}

caption {
  caption-side: bottom;
  font-size: .875rem;
  line-height: 1.5rem;
}

figure.connective figcaption {
  text-align: center;
  font-style: italic;
  vertical-align: top;
  font-size: .875rem;
  line-height: 1.5rem;
  grid-column: 1 / -1;
  margin-bottom: 1em;
}

/* inference rule presentations */

table > tbody > tr > th {
  vertical-align: top;
}

/* thank you, CSS hero: https://twitter.com/ptrfrncsmrph/status/1420749056125685762 */
div.connective,
figure.connective {
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(2, auto);
  gap: 24px;
  width: max-content;
  align-items: center;
}

#with {
  display: grid;
  grid-template-columns: repeat(2, auto);
  width: max-content;
  align-items: center;
}

.rule {
  display: flex;
  flex-direction: row;
  gap: 2px;
  width: max-content;
  align-items: center;
}

:root {
  --sequent-font: "Computer Modern Serif", sans-serif;
  --sequent-neg-colour: rgb(150, 150, 255);
  --sequent-pos-colour: rgb(255, 150, 150);
}
.rule, .equivalence {
  font-size: 1.25rem;
  line-height: 1.8rem;
  font-weight: 100;
  font-family: var(--sequent-font);
}

.equivalence {
  text-align: center;
}

/* .rule.left, .rule.right {
  float: none;
} */

div.left-rules, div.right-rules {
  display: flex;
  flex-direction: column;
  gap: 1em;
}

.rule div.label {
  font-size: 75%;
  padding: 6px;
}

seq-inference sub, .rule sub, .rule sup, .equivalence sub, .equivalence sup {
  font-size: 60%;
  line-height: 0;
}

div.premises {
  grid-column: 1 / -1;
  display: flex;
  flex-direction: row;
  gap: 20px;
  width: max-content;
}

div.premises ~ div.conclusion {
  text-align: center;
  grid-column: 1 / -1;
}

div.side-condition {
  white-space: pre;
}

div.inference {
  display: grid;
  grid-template-columns: repeat(3, auto);
  gap: 2px;
  width: max-content;
}

div.axiom {
  grid-column: 1 / -1;
  height: 1.75rem;
  line-height: 1.8rem;
  text-align: center;
}
div.axiom::after {
  content: "∎";
}

.rule div.axiom,
.rule div.premise,
.rule div.side-condition,
.rule div.conclusion {
  padding: 2px;
}

.rule .line-of-inference {
  grid-column: 1 / -1;
  background: #666;
  height: 1px;
}

.rule div.Γ {
  text-align: right;
}

.rule div.turnstile {
  text-align: center;
}

.E::after {
  content: "E";
}
.R::after {
  content: "R";
}
.E::after,
.R::after {
  vertical-align: sub;
  font-size: 60%;
  line-height: 0;
}

.rule div.Δ {
  text-align: left;
}

/* Hack to workaround pandoc’s insistence on inserting unwanted empty paragraph tags despite being told never to mess with HTML blocks. */
p:empty {
  display: none;
}

cite {
  font-style: italic;
}


p:last-child {
  margin-bottom: 0;
}


figure.section {
  margin-bottom: 2em;
  display: grid;
  grid-template-columns: repeat(2, 50%);
  gap: 20px;
  /* width: 50%; */
  align-items: center;
}

span.function,
span.var,
span.metavar {
  font-style: italic;
}

.var > sup {
  font-style: normal;
}

span.Γ, span.Δ {
  color: rgb(100, 100, 100);
}

div.column {
  display: flex;
  flex-direction: column;
  gap: 1em;
  width: 100%;
  justify-items: center;
  align-items: center;
}

.neg,
.neg > sup,
.with.op, .with > .op,
.top,
.par.op, .par > .op,
.bottom.op, .bottom > .op,
.implication.op, .implication > .op,
.not.op, .not > .op,
.not-untrue.op, .not-untrue > .op,
.up-shift.op, .up-shift > .op,
.for-all.op, .for-all > .op,
.R::after,
sub.R,
sup.N {
  color: var(--sequent-neg-colour);
}
.pos,
.pos > sup,
.sum.op, .sum > .op,
.zero,
.tensor.op, .tensor > .op,
.one.op, .one > .op,
.coimplication.op, .coimplication > .op,
.negate.op, .negate > .op,
.true.op, .true > .op,
.down-shift.op, .down-shift > .op,
.there-exists.op, .there-exists > .op,
.E::after,
sub.E,
sup.V {
  color: var(--sequent-pos-colour);
}

var[neg]::after,
var[pos]::after {
  font-style: normal;
  vertical-align: super;
  font-size: 60%;
  line-height: 0;
  display: none;
}
var[neg]::after {
  content: '−';
}
var[pos]::after {
  content: '+';
}
.show-polarities var[neg]::after,
.show-polarities var[pos]::after {
  display: inline;
}

seq-var[neg],
var[neg] {
  color: var(--sequent-neg-colour);
}
seq-var[pos],
var[pos] {
  color: var(--sequent-pos-colour);
}

:where(seq-with,
seq-sum,
seq-top,
seq-zero,
seq-par,
seq-tensor,
seq-bottom,
seq-one,
seq-impl,
seq-coimpl,
seq-not,
seq-negate,
seq-not-untrue,
seq-true,
seq-up,
seq-down,
seq-forall,
seq-exists,
seq-var,
seq-sequent,
var):hover {
  background-color: rgba(50, 50, 50, 0.05);
}

.substitution {
  color: initial;
}


fieldset {
  border: 0;
}


@media screen and (min-width: 92rem) {
  table.ruleset > tbody > tr > th {
    padding: 0;
  }
  table>tbody>tr>th>h3 {
    position: absolute;
    float: left;
    text-align: right;
    margin-left: -100%;
    width: 100%;
  }
}

@media screen and (max-width: 72rem) {
  table.ruleset>tbody>tr>td {
    float: left;
    width: 100%;
  }
  table.ruleset>tbody>tr>td::after {
    clear: both;
  }
}
